[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "finsim"
version = "0.1.0"
description = "Financial simulation tool for comparing annuities and investments with tax-aware Monte Carlo modeling"
readme = "README.md"
requires-python = ">=3.13"
license = {text = "MIT"}
authors = [
    {name = "PolicyEngine", email = "hello@policyengine.org"},
]
keywords = ["finance", "simulation", "monte-carlo", "annuity", "tax", "retirement"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Office/Business :: Financial",
    "Topic :: Scientific/Engineering :: Mathematics",
]

dependencies = [
    "numpy>=1.24.0",
    "numpy-financial>=1.0.0",
    "pandas>=2.0.0",
    "scipy>=1.10.0",
    "policyengine-us>=1.0.0",
    "pyvis>=0.3.2",  # Required by policyengine-core
    "mortality @ git+https://github.com/PolicyEngine/mortality.git",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]
docs = [
    "jupyter-book>=2.0.0b2",
    "sphinx-autodoc-typehints>=1.24.0",
    "myst-nb>=1.0.0",
]
app = [
    "streamlit>=1.32.0",
    "plotly>=5.18.0",
    "yfinance>=0.2.0",  # For fetching historical fund data
]
enhanced = [
    "arch>=6.0.0",  # GARCH volatility modeling
    "yfinance>=0.2.0",  # Historical market data
    "statsmodels>=0.14.0",  # Statistical analysis
]

[project.urls]
Homepage = "https://github.com/PolicyEngine/finsim"
Documentation = "https://policyengine.github.io/finsim"
Repository = "https://github.com/PolicyEngine/finsim"
Issues = "https://github.com/PolicyEngine/finsim/issues"


[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v"

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py313"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true
strict_equality = true